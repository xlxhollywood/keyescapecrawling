plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.mongodb:mongodb-driver-sync:4.10.1'
    implementation 'org.seleniumhq.selenium:selenium-java:4.29.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.29.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'org.json:json:20230618'
}

test {
    useJUnitPlatform()
}

/**
 * (1) ShadowJar 기본 설정: KeyEscape용
 *    - 기존 keyescape JAR 만드는 설정
 *    - Main-Class = 'org.example.keyescape.KeyEscapeCrawling'
 */
shadowJar {
    archiveBaseName.set("keyescape")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")
    manifest {
        attributes("Main-Class": "org.example.keyescape.KeyEscapeCrawling")
    }
}

/**
 * (2) DanpyeonseonCrawling용 ShadowJar Task
 *     - Main-Class = 'org.example.danpyeonseonCrawling.DanpyeonseonCrawling'
 */
task shadowJarDanpyeonseon(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("danpyeonseon")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.danpyeonseon.DanpyeonseonCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}

/**
 * (3) BeatphobiaCrawling용 ShadowJar Task
 *     - Main-Class = 'org.example.beatphobia.BeatphobiaCrawling'
 */
task shadowJarBeatphobia(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("beatphobia")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.beatphobia.BeatphobiaCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (4) eroom8용 ShadowJar Task
 *     - Main-Class = 'org.example.eroom8.Eroom8Crawling'
 */
task shadowJarEroom8(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("eroom8")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.eroom8.Eroom8Crawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (5) exodus용 ShadowJar Task
 *     - Main-Class = 'org.example.exodus.ExodusEscapeCrawling'
 */
task shadowJarExodus(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("exodus")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.exodus.ExodusEscapeCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (6) fantastrick용 ShadowJar Task
 *     - Main-Class = 'org.example.fantastrick.FantastrickCrawling'
 */
task shadowJarFantastrick(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("fantastrick")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.fantastrick.FantastrickCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (7) goldenkey용 ShadowJar Task
 *     - Main-Class = 'org.example.goldenkey.GoldenkeyCrawling'
 */
task shadowJarGoldenkey(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("goldenkey")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.goldenkey.GoldenkeyCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (8) masterkey용 ShadowJar Task
 *     - Main-Class = 'org.example.masterkey.MasterkeyCrawling'
 */
task shadowJarMasterkey(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("masterkey")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.masterkey.MasterkeyCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (9) kukuroom용 ShadowJar Task
 *     - Main-Class = 'org.example.kukuroom.KukuRoom'
 */
task shadowJarKukuroom(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("kukuroom")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.kukuroom.KukuRoom")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (10) playtheworld용 ShadowJar Task
 *     - Main-Class = 'org.example.playtheworld.PlayTheWorldCrawling'
 */
task shadowJarPlayTheWorld(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("playtheworld")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.playtheworld.PlayTheWorldCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (11) pointnine용 ShadowJar Task
 *     - Main-Class = 'org.example.pointnine.PointNineCrawling'
 */
task shadowJarPointNine(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("pointnine")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.pointnine.PointNineCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (12) portraiteller용 ShadowJar Task
 *     - Main-Class = 'org.example.pointnine.PointNineCrawling'
 */
task shadowJarPortraiteller(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("portraiteller")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.portraiteller.PortraitellerCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (13) signescape용 ShadowJar Task
 *     - Main-Class = 'org.example.pointnine.PointNineCrawling'
 */
task shadowJarSignescape(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("signescape")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.signescape.SignescapeCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}


/**
 * (14) zeroworld용 ShadowJar Task
 *     - Main-Class = 'org.example.pointnine.PointNineCrawling'
 */
task shadowJarZeroWorld(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set("zeroworld")
    archiveVersion.set("1.0-SNAPSHOT")
    archiveClassifier.set("")

    manifest {
        attributes("Main-Class": "org.example.zeroworld.ZeroworldCrawling")
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}

/**
 * (15) build 시 열네개의 ShadowJar Task 전부 실행하게 함
 */
build.dependsOn(shadowJar, shadowJarDanpyeonseon, shadowJarBeatphobia, shadowJarEroom8, shadowJarExodus, shadowJarFantastrick, shadowJarGoldenkey, shadowJarMasterkey, shadowJarKukuroom, shadowJarPlayTheWorld, shadowJarPointNine, shadowJarPortraiteller, shadowJarSignescape, shadowJarZeroWorld)
